{"version":3,"sources":["utils/BooksAPI.js","components/Book.js","components/Shelf.js","components/BookShelves.js","components/Search.js","components/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","search","query","maxResults","fetch","method","body","JSON","stringify","then","res","json","data","books","Book","booksList","shelves","updateShelf","className","filter","book","imageLinks","authors","map","style","width","height","backgroundImage","thumbnail","value","shelf","onChange","event","target","handleShelfChanger","disabled","bookShelf","id","name","title","join","Shelf","shelfBooks","BookShelves","allBooks","booksShelf","to","Search","useState","setQuery","searchedBooks","setSearchedBooks","useEffect","unmounted","a","apiResults","response","error","resBook","console","log","searchBooks","type","placeholder","updateQuery","textAlign","App","setAllBooks","currentShelf","includes","updatedBooks","currentBook","searchBook","concat","update","getAllBooks","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81b612ba.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import PropTypes from \"prop-types\";\r\n\r\nconst Book = ({ booksList, shelves, updateShelf }) => {\r\n\r\n\tconst handleShelfChanger = (event, book) => {\r\n\r\n\t\tupdateShelf(book, event.target.value);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<ol className=\"books-grid\">\r\n\t\t\t{booksList\r\n\t\t\t\t.filter(book => book.imageLinks && book.authors)\r\n\t\t\t\t.map((book) => (\r\n\t\t\t\t\t<li key={book.id}>\r\n\t\t\t\t\t\t<div className=\"book\">\r\n\t\t\t\t\t\t\t<div className=\"book-top\">\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName=\"book-cover\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: 128,\r\n\t\t\t\t\t\t\t\t\theight: 193,\r\n\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t\t<div className=\"book-shelf-changer\">\r\n\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\tvalue={book.shelf ? book.shelf : \"none\"}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) => handleShelfChanger(event, book)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"move-to\" disabled>Move to...</option>\r\n\t\t\t\t\t\t\t\t\t\t{shelves.map((bookShelf) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option key={bookShelf.id} value={bookShelf.id}>{bookShelf.name}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"book-title\">{book.title}</div>\r\n\t\t\t\t\t\t\t<div className=\"book-authors\">{book.authors.join(\" and \")}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</ol>\r\n\t);\r\n};\r\n\r\nBook.propTypes = {\r\n\tbooksList: PropTypes.array.isRequired,\r\n\tshelves: PropTypes.array.isRequired,\r\n\tupdateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Book;","import PropTypes from \"prop-types\";\r\nimport Book from \"./Book\";\r\n\r\nconst Shelf = ({ shelves, shelf, shelfBooks, updateShelf }) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"bookshelf\">\r\n\t\t\t<h2 className=\"bookshelf-title\">{shelf}</h2>\r\n\t\t\t<div className=\"bookshelf-books\">\r\n\t\t\t\t<Book\r\n\t\t\t\t\tbooksList={shelfBooks}\r\n\t\t\t\t\tshelves={shelves}\r\n\t\t\t\t\tupdateShelf={updateShelf}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nShelf.propTypes = {\r\n\tshelfBooks: PropTypes.array.isRequired,\r\n\tshelves: PropTypes.array.isRequired,\r\n\tshelf: PropTypes.string.isRequired,\r\n\tupdateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Shelf;","import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Shelf from \"./Shelf\";\r\n\r\nconst BookShelves = ({ allBooks, shelves, updateShelf }) => {\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          {shelves.map(booksShelf => (\r\n            booksShelf.id !== \"none\" && (\r\n              <Shelf\r\n                key={booksShelf.id}\r\n                shelves={shelves}\r\n                shelf={booksShelf.name}\r\n                shelfBooks={allBooks.filter((book) => book.shelf === booksShelf.id)}\r\n                updateShelf={updateShelf}\r\n              />\r\n            )\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBookShelves.propTypes = {\r\n  allBooks: PropTypes.array.isRequired,\r\n  shelves: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BookShelves;","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { search } from \"../utils/BooksAPI\";\r\nimport Book from \"./Book\";\r\n\r\nconst Search = ({ allBooks, shelves, updateShelf }) => {\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n\r\n\r\n  const updateQuery = (query) => {\r\n    setQuery(query);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n\r\n    const reflectBookshelf = (response) => {\r\n      !response.error && (\r\n        response.map((resBook) => (\r\n          allBooks.map((book) => (\r\n            (resBook.id === book.id) && (\r\n              resBook.shelf = book.shelf\r\n            )\r\n          ))\r\n        ))\r\n      )\r\n      return response;\r\n    };\r\n\r\n    const searchBooks = async (query) => {\r\n      let res;\r\n\r\n      if (!unmounted) {\r\n        if (query) {\r\n          try {\r\n            const apiResults = await search(query);\r\n            res = reflectBookshelf(apiResults);\r\n            console.log(res);\r\n\r\n          } catch (error) {\r\n            res = error;\r\n            console.log(error);\r\n          }\r\n\r\n        } else {\r\n          res = [];\r\n        }\r\n        setSearchedBooks(res);\r\n      }\r\n    };\r\n    searchBooks(query);\r\n\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [allBooks, query]);\r\n\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link className=\"close-search\" to=\"/\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            value={query}\r\n            onChange={(event) => updateQuery(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        {\r\n          searchedBooks && (\r\n            searchedBooks.error\r\n              ? <p style={{textAlign: \"center\",}}>\r\n                  {`No results found for your search \"${query}\".`}\r\n                </p>\r\n              : <Book\r\n                  booksList={searchedBooks}\r\n                  shelves={shelves}\r\n                  updateShelf={updateShelf}\r\n                />\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  allBooks: PropTypes.array.isRequired,\r\n  shelves: PropTypes.array.isRequired,\r\n  updateShelf: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;","import \"../css/App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport {getAll, update} from \"../utils/BooksAPI\";\nimport BookShelves from \"./BookShelves\";\nimport Search from \"./Search\";\n\nfunction App() {\n\n  const [allBooks, setAllBooks] = useState([]);\n\n\n  const shelves = [\n\t\t{id: \"currentlyReading\", name: \"Currently Reading\"},\n\t\t{id: \"wantToRead\", name: \"Want to Read\"},\n\t\t{id: \"read\", name: \"Read\"},\n\t\t{id: \"none\", name: \"None\"}\n\t];\n\n\n  const updateShelf = (book, currentShelf) => {\n\n    if (allBooks.includes(book)) {\n      const updatedBooks = allBooks.map((currentBook) => {\n        if (currentBook.id === book.id) {\n          currentBook.shelf = currentShelf;\n        }\n        return currentBook;\n      });\n      setAllBooks(updatedBooks);\n\n    } else {\n      let searchBook = [];\n      book.shelf = currentShelf;\n      searchBook = book;\n      setAllBooks(allBooks.concat(searchBook));\n    }\n\n    update(book, currentShelf);\n  };\n\n\n  useEffect(() => {\n    const getAllBooks = async () => {\n      const res = await getAll();\n      setAllBooks(res);\n    };\n\n    getAllBooks();\n  }, []);\n\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={\n            <BookShelves\n              allBooks={allBooks}\n              shelves={shelves}\n              updateShelf={updateShelf}\n            />\n          }\n        />\n        <Route\n          path=\"/search\"\n          element={\n            <Search\n              allBooks={allBooks}\n              shelves={shelves}\n              updateShelf={updateShelf}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}